services:
  redis:
    image: redis:latest
    restart: on-failure
    ports:
      - "6379:6379"
  db:
    image: postgres:16.0
    restart: on-failure
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data    #монтирует текущую директорию на контейнер
    healthcheck:
      test: ["CMD-SHELL","-c","pg_isready -U $POSTGRES_USER"]
      interval: 10s
      retries: 5
      timeout: 5s
  app:
    build: .
    tty: true
    ports:
      - "8000:8000"

    command: sh -c 'python manage.py migrate && python manage.py runserver 0.0.0.0:8000'
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    env_file:
      - .env

  celery:
    build: .
    tty: true
    command: python -m celery -A config worker -l info
    restart: on-failure
    depends_on:
      - redis
      - db
      - app
    volumes:
      - .:/app
    env_file:
      - .env

  celery-beat:
    build: .
    tty: true
    command: sh -c "python3 manage.py celery -A config beat --loglevel=info"
    restart: on-failure
    depends_on:
      - redis
      - db
      - app
    volumes:
      - .:/app
    env_file:
      - .env
volumes:
  pg_data: