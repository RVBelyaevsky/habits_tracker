services:
  redis:
    image: redis:latest
    volumes:
      - redis_data:/data
    env_file:
      - ./.env
  db:
    image: postgres:16.0
    env_file:
      - ./.env
#    ports:
#      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data/

#    healthcheck:
#      test: ["CMD-SHELL","-c","pg_isready -U $POSTGRES_USER"]
#      interval: 10s
#      retries: 5
#      timeout: 5s
  web:
    build: .
    expose:
      - "8000"
    command: sh -c "python manage.py collectstatic --noinput && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    env_file:
      - ./.env

  celery:
    build: .
    tty: true
    command: python -m celery -A config worker -l info
    restart: on-failure
    depends_on:
      - redis
      - db
      - web
    volumes:
      - .:/app
    env_file:
      - .env

  celery-beat:
    build: .
    tty: true
    command: sh -c "python3 manage.py celery -A config beat --loglevel=info"
    restart: on-failure
    depends_on:
      - redis
      - db
      - web
    volumes:
      - .:/app
    env_file:
      - .env

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    voLumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
    depends_on:
      - web

volumes:
  pg_data:
  static_volume:
  redis_data: